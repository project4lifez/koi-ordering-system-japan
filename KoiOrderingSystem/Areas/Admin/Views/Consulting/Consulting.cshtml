@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@using System.Linq

@model KoiOrderingSystem.Models.Booking

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Koi Order Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Inline CSS to align elements in one row */
        .form-inline {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        /* Modal CSS */
        .modal {
            display: none; /* Use flexbox to center */
            justify-content: center; /* Center horizontally */
            align-items: center; /* Center vertically */
            position: fixed; /* Fix position to the viewport */
            top: 0; /* Align to the top */
            left: 0; /* Align to the left */
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            background-color: rgba(0, 0, 0, 0.5); /* Background overlay */
            z-index: 1000; /* Ensure modal is above other content */
        }

        .modal-content {
            width: calc(100% - 100px); /* Adjust the width */
            max-width: 600px; /* Maximum width */
            padding: 20px; /* Add padding */
            background-color: white; /* Background color for the modal content */
            border-radius: 8px; /* Rounded corners */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Shadow effect */
        }

        .close {
            color: red;
            float: right;
            font-size: 28px;
            cursor: pointer;
        }

            .close:hover {
                color: darkred;
            }

        .form-group {
            margin-bottom: 10px;
        }

        label {
            display: block;
        }

        span {
            display: inline-block;
            text-align: right;
            cursor: pointer;
        }

        .row {
            display: flex;
            flex-wrap: wrap;
        }

        .col-md-6 {
            display: flex;
            flex-direction: column;
        }

        .card {
            flex: 1;
        }

    </style>
</head>
<body>
    <main class="container-fluid px-4">
        <h1 class="mt-4">Dashboard (Consulting Staff)</h1>
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }


        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        <!-- Form Inline (Same Row) -->
        <form action="/Admin/Consulting/UpdateStatus" method="post">
            <input type="hidden" name="bookingId" value="@Model.BookingId" />

            <div class="form-inline mb-4">
                <button class="btn btn-primary mb-2" id="updateKoiBtn" style="margin-top: 8px">Update Koi Order</button>
                <select class="form-select mb-2" name="status" id="status" style="width: 150px; margin-top: 8px">
                    <option value="checkin" @(Model.Status == "Checked in" ? "selected" : "")>Check in</option>
                    <option value="checkout" @(Model.Status == "Checked out" ? "selected" : "")>Check out</option>
                </select>
                <button class="btn btn-success"
                @(Model?.Status != null &&
                    (string.Equals(Model.Status, "Delivered", StringComparison.OrdinalIgnoreCase) ||
                    string.Equals(Model.Status, "Delivering", StringComparison.OrdinalIgnoreCase) ||
                    string.Equals(Model.Status, "Checked out", StringComparison.OrdinalIgnoreCase) ||
                    string.Equals(Model.Status, "Accepted", StringComparison.OrdinalIgnoreCase) ||
                    string.Equals(Model.Status, "Rejected", StringComparison.OrdinalIgnoreCase) ||
                    string.Equals(Model.Status, "Canceled", StringComparison.OrdinalIgnoreCase) ||
                    string.Equals(Model.Status, "Processing", StringComparison.OrdinalIgnoreCase) ||
                    string.Equals(Model.Status, "Requested", StringComparison.OrdinalIgnoreCase)) ? "disabled" : "")>
                    Update
                </button>
            </div>
        </form>

        <!-- Modal for Update Koi Order -->
        <div id="updateModal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <h4>Update Koi Order</h4>

                <!-- Form Fields -->
                <div class="form-group">
                    <label for="day-selection">Select Day:</label>
                    <select id="day-selection" class="form-select">
                        <option value="day1">Day 1</option>
                        <option value="day2">Day 2</option>
                        <option value="day3">Day 3</option>
                        <option value="day4">Day 4</option>
                        <option value="day5">Day 5</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="koi-breed">Koi Breed:</label>
                    <input type="text" id="koi-breed" class="form-control" placeholder="Enter Koi Breed">
                </div>

                <div class="form-group">
                    <label for="farm">Farm:</label>
                    <input type="text" id="farm" class="form-control" placeholder="Enter Farm">
                </div>

                <div class="form-group">
                    <label for="quantity">Quantity:</label>
                    <input type="number" id="quantity" class="form-control" placeholder="Enter Quantity">
                </div>

                <div class="form-group">
                    <label for="deposit">Deposit:</label>
                    <input type="text" id="deposit" class="form-control" placeholder="Enter Deposit">
                </div>

                <div class="form-group">
                    <label for="price">Price:</label>
                    <input type="text" id="price" class="form-control" placeholder="Enter Price">
                </div>

                <div class="form-group">
                    <label for="image-upload">Image:</label>
                    <input type="file" id="image-upload" class="form-control">
                </div>

                <button class="btn btn-primary mt-3">Update</button>
            </div>
        </div>

        <div class="row">
            <!-- Left Column: Customer Information and Updated Information -->
            <div class="col-md-6">
                <!-- Customer Information Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        Customer Information
                    </div>
                    <div class="card-body">
                        <p><strong>Customer Name:</strong> @Model.Fullname</p>
                        <p><strong>Email:</strong> @Model.Email</p>
                        <p><strong>Phone Number:</strong> @Model.Phone</p>
                    </div>
                </div>

                <!-- Updated Information Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        Updated Delivering Information
                    </div>
                    <div class="card-body" id="updated-info">
                        <p><strong>Delivery Time:</strong> <span id="updated-time">@Model.Po?.KoiDeliveryTime</span></p>
                        <p><strong>Delivery Date:</strong> <span id="updated-date">@Model.Po?.KoiDeliveryDate</span></p>
                        <p><strong>Delivery Location:</strong> <span id="updated-location">@Model.Po?.DeliveryLocation</span></p>
                        <p><strong>Koi Price:</strong> <span id="updated-price">@Model.Po?.TotalAmount?.ToString()</span></p>
                        <p>
                            <strong>Deposit:</strong>
                            <span id="updated-deposit">
                                @(Model.Po?.Podetails?.FirstOrDefault()?.Deposit.HasValue == true
                                    ? Model.Po.Podetails.FirstOrDefault().Deposit.Value.ToString("N0") + "$"
                                    : "")
                            </span>
                        </p>
                    </div>
                </div>
            </div>

            <!-- Right Column: Order Detail Section -->
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        Order Detail
                    </div>
                    <div class="card-body">
                        <form action="/Admin/Consulting/UpdateDelivering" method="post">
                            <input type="hidden" name="bookingId" value="@Model.BookingId" />
                            <div class="form-group">
                                <label>Delivery Date</label>
                                <input type="date" name="deliveryDate" class="form-control"
                                       value="@(Model.Po?.KoiDeliveryDate != null
                ? Model.Po.KoiDeliveryDate.Value.ToString("yyyy-MM-dd")
                : "")" />
                            </div>
                            <div class="form-group">
                                <div class="form-group">
                                    <label>Delivery Time</label>
                                    <input type="time" name="deliveryTime" class="form-control"
                                           value="@(Model.Po?.KoiDeliveryTime != null
                    ? Model.Po.KoiDeliveryTime.Value.ToString(@"hh\:mm")
                    : "")" />
                                </div>
                          
                            <div class="form-group">
                                <label>Delivery Location</label>
                                <input type="text" name="deliveryLocation" class="form-control" value="@Model.Po?.DeliveryLocation" />                          
                            </div>
                            <div class="form-group">
                                <label>Koi Price</label>
                                <input type="number" name="koiPrice" class="form-control" value="@Model.Po?.TotalAmount" />
                            </div>

                                @if (Model.Po?.Podetails != null && Model.Po.Podetails.Any())
                                {
                                    var detail = Model.Po.Podetails.First(); // Lấy phần tử đầu tiên
                                    <div class="form-group">
                                        <label>Deposit</label>
                                        <input type="number" name="deposit" class="form-control"
                                               value="@detail.Deposit" step="0.01" />
                                    </div>
                                }

                                <button type="submit" class="btn btn-primary mt-3"
                                @(Model.Status != "Checked in" && Model.Status != "Checked out" ? "disabled" : "")>
                                    Update Delivery
                                </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
       

        <!-- Trip Information Section -->
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-4">
                    <div class="card-header">
                    </div>
                    <div class="card-body">
                        <h5> @Model.Trip?.TripName</h5>
                        <div class="d-flex flex-column">
                            <p style="text-align: right;"><strong>Koi Price:</strong>@Model.Po?.TotalAmount$</p>
                            <p style="text-align: right;">
                                <strong>Deposit:</strong>
                                @Model.Po?.Podetails?.FirstOrDefault()?.Deposit$
                            </p>
                        </div>
                        <div class="d-flex flex-column">
                            <p style="text-align: right;">
                                <strong>Remaining Payment:</strong>
                                @((Model.Po?.TotalAmount ?? 0) - (Model.Po?.Podetails?.FirstOrDefault()?.Deposit ?? 0))$
                            </p>                            
                            <p class="text-danger" style="text-align: right;"><strong>Status:</strong> @Model?.Status</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        // Get modal element
        var modal = document.getElementById("updateModal");

        // Get button element that opens the modal
        var btn = document.getElementById("updateKoiBtn");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks the button, open the modal
        btn.onclick = function () {
            modal.style.display = "flex";
        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    </script>
</body>