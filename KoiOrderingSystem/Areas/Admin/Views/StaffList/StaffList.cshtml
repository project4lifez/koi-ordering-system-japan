@model IEnumerable<KoiOrderingSystem.Models.Account>
@{
    ViewData["Title"] = "Manager";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Cards</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f4f5f7;
            padding: 3rem;
        }

        .employee-card {
            background-color: #ffffff;
            border-radius: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            padding: 2rem;
            text-align: center;
            transition: transform 0.2s ease-in-out;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-between;
            height: 350px;
        }

            .employee-card:hover {
                transform: scale(1.05);
            }

        .avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            overflow: hidden;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .avatar img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .btn-details {
            background-color: #186ff5;
            color: white;
            border: none;
            border-radius: 10px;
            padding: 0.5rem 1.5rem;
            font-weight: bold;
            transition: all 0.3s ease-in-out;
        }

            .btn-details:hover {
                background-color: #0b5be7;
            }

        .card-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 15px;
        }

        .filter-container {
            display: flex;
            justify-content: flex-start;
            margin-bottom: 20px;
        }

            .filter-container select, .filter-container input {
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 10px;
                background-color: #fff;
                cursor: pointer;
                margin-right: 10px;
            }

        h5 {
            margin-bottom: 1rem;
        }

        p {
            margin-bottom: 5px;
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

            .pagination a {
                margin: 0 5px;
                padding: 10px 15px;
                border: 1px solid #ddd;
                color: #333;
                text-decoration: none;
                border-radius: 5px;
            }

                .pagination a.active {
                    background-color: #186ff5;
                    color: white;
                    border-color: #186ff5;
                }

                .pagination a:hover {
                    background-color: #0b5be7;
                    color: white;
                    border-color: #0b5be7;
                }
    </style>
</head>
<body>
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Employee Cards</h1>
            <button class="btn btn-details" onclick="window.location.href='/Admin/CreateAccount'">+ Create New Account</button>
        </div>

        <div class="filter-container">
            <form method="get" action="/Admin/StaffList">
                <select id="positionFilter" name="roleId" onchange="this.form.submit()">
                    <option value="">All Positions</option>
                    <option value="3" @(ViewBag.SelectedRoleId == 3 ? "selected" : "")>Sale Staff</option>
                    <option value="4" @(ViewBag.SelectedRoleId == 4 ? "selected" : "")>Consulting Staff</option>
                    <option value="5" @(ViewBag.SelectedRoleId == 5 ? "selected" : "")>Delivering Staff</option>
                </select>

                <input type="text" name="searchQuery" placeholder="Search by name..." value="@ViewBag.SearchQuery" />
                <input type="hidden" name="page" value="1" />
                <button type="submit" class="btn btn-details">Search</button>
            </form>
        </div>

        <div class="card-container" id="employeeCards">
            @foreach (var staff in Model)
            {
                <div class="employee-card" data-role="@staff.Role?.Name">
                    <div class="avatar">
                        <img src="@(!string.IsNullOrEmpty(staff.ImageUrl) ? staff.ImageUrl : "https://via.placeholder.com/100")" alt="Avatar">
                    </div>
                    <h5>@staff.Lastname</h5>
                    <p>Account ID: @staff.AccountId</p>
                    <p>@staff.Role?.Name</p>
                    <button class="btn btn-details" onclick="window.location.href='/Admin/ProfileDetail?accountId=@staff.AccountId'">Details</button>
                </div>
            }
        </div>

        <div class="pagination">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <a href="/Admin/StaffList?page=@i&roleId=@ViewBag.SelectedRoleId&searchQuery=@ViewBag.SearchQuery" class="@(ViewBag.CurrentPage == i ? "active" : "")">
                    @i
                </a>
            }
        </div>
    </div>

</body>
</html>
