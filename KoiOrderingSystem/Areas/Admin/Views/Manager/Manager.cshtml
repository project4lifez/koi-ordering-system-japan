@model KoiOrderingSystem.Models.Booking

@{
    ViewData["Title"] = "Manager";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard (Manager)</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .error-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 10; /* Ensure it's above the card */
        }
    </style>
</head>
<body>
    <main class="container-fluid px-4">
        <h1 class="mt-4">Dashboard (Manager)</h1>

        <div class="row">
            <!-- Customer Information Section -->
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        Customer Information
                    </div>
                    <div class="card-body">
                        <p><strong>Name:</strong> @Model.Fullname</p>
                        <p><strong>Email:</strong> @Model.Email</p>
                        <p><strong>Phone Number:</strong> @Model.Phone</p>
                        <a href="#" class="btn btn-link">User detail</a>
                    </div>
                </div>
            </div>

            <!-- Order Detail Section -->
            <div class="col-md-6 position-relative">
                <!-- Add position-relative for error overlay -->
                <div class="card mb-4">
                    <div class="card-header">
                        Order Detail
                    </div>
                    <div class="card-body">
                        <p><strong>Status:</strong> @Model.Status</p>

                        <!-- Display model errors here -->
                        @if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success" role="alert">
                                @TempData["SuccessMessage"]
                            </div>
                        }

                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger" role="alert">
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <div>@error.ErrorMessage</div>
                                }
                            </div>
                        }

                        <form action="/Admin/Manager/UpdateStatusManager" method="post">
                            <input type="hidden" name="bookingId" value="@Model.BookingId" />
                            <select class="form-select" name="status" id="status" style="width: 150px; margin-top: 8px"
                            @(Model.Status == "Canceled" ? "disabled" : "")>
                                <option value="Rejected" @(Model.Status == "Rejected" ? "selected" : "")>Rejected</option>
                                <option value="Canceled" @(Model.Status == "Canceled" ? "selected" : "")>Canceled</option>
                                <option value="Accepted" @(Model.Status == "Accepted" ? "selected" : "")>Accepted</option>
                            </select>
                            <button class="btn btn-success ml-2 mt-2" type="submit"
                            @(Model.Status != null &&
                                (string.Equals(Model.Status, "Confirmed", StringComparison.OrdinalIgnoreCase) ||
                                string.Equals(Model.Status, "Canceled", StringComparison.OrdinalIgnoreCase) ||
                                string.Equals(Model.Status, "Checked in", StringComparison.OrdinalIgnoreCase) ||
                                string.Equals(Model.Status, "Checked out", StringComparison.OrdinalIgnoreCase) ||
                                string.Equals(Model.Status, "Delivering", StringComparison.OrdinalIgnoreCase) ||
                                string.Equals(Model.Status, "Delivered", StringComparison.OrdinalIgnoreCase)) ? "disabled" : "")>
                                Update
                            </button>

                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Trip Information Section -->
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-4">
                    <div class="card-header">
                        Trip Name
                    </div>
                    <div class="card-body">
                        <h5>@Model.Trip?.TripName</h5>
                        <div class="d-flex flex-column">
                            <p style="text-align: right;">
                                <strong>Koi Price:</strong>
                                @(Model.Po?.Podetails
                                    ?.Where(pd => pd.PoId == Model.Po.PoId)
                                    .Sum(pd => pd.TotalKoiPrice) ?? 0) USD
                            </p>
                            <p style="text-align: right;">
                                <strong>Total Deposited:</strong>
                                @(Model?.Po?.Podetails
                                    ?.Where(pd => pd.PoId == Model.Po.PoId)
                                    .GroupBy(pd => pd.FarmId) // Group by FarmId
                                    .Sum(group => group.FirstOrDefault()?.Deposit ?? 0) ?? 0) USD
                            </p>
                        </div>
                        <div class="d-flex flex-column">
                            <p style="text-align: right;">
                                <strong>Remaining Payment:</strong>
                                @Model.Po?.TotalAmount USD
                            </p>
                            <p class="text-danger" style="text-align: right;">
                                <strong>Status:</strong> @Model?.Status
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</body>
