@model IEnumerable<KoiOrderingSystem.Models.Booking>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <h2>Your Order - Nishikigoi Ordering Service</h2>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Your existing CSS styles remain here */
        body {
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
            font-family: 'Roboto', sans-serif;
        }

        .custom-container {
            display: flex;
            min-height: calc(100vh - 100px);
            background-color: #ffffff;
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
        }

        .custom-sidebar {
            background-color: #ffffff;
            width: 20%;
            padding: 20px;
            border-right: 2px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }

            .custom-sidebar h2 {
                margin-bottom: 20px;
                font-weight: 700;
                font-size: 1.2rem;
                color: #1565c0;
            }

            .custom-sidebar ul {
                list-style: none;
                padding: 0;
            }

            .custom-sidebar li {
                margin-bottom: 15px;
                font-size: 1rem;
                padding: 10px;
                border-radius: 5px;
                display: flex;
                align-items: center;
                justify-content: space-between;
                transition: background-color 0.3s ease;
                color: #333;
            }

                .custom-sidebar li a {
                    color: #1565c0;
                    text-decoration: none;
                    display: flex;
                    align-items: center; /* Align items vertically */
                    justify-content: space-between; /* Space between link text and icon */
                }

                    .custom-sidebar li a i {
                        margin-left: 5px; /* Space between text and icon */
                    }

        .custom-active {
            background-color: #90caf9;
            color: white;
        }

        .custom-order-count {
            background-color: #64b5f6;
            color: white;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 12px;
        }

        .custom-content {
            flex-grow: 1;
            padding: 40px;
            background-color: #f8f9fa;
        }

            .custom-content h2 {
                margin-bottom: 20px;
                font-weight: 600;
                font-size: 1.5rem;
                color: #1565c0;
            }

        .custom-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
            background-color: white;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }

        .custom-th, .custom-td {
            padding: 20px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }

        .custom-th {
            background-color: #e3f2fd;
            font-weight: 700;
            color: #1565c0;
        }

        .custom-td {
            position: relative;
            font-size: 1rem;
        }

        /* Custom status styles */
        .custom-requested {
            background-color: #e0e0e0;
            color: #333;
            padding: 5px 15px;
            border-radius: 20px;
        }

        .custom-payment-available {
            background-color: #FFF59D;
            color: #333;
            padding: 5px 15px;
            border-radius: 20px;
        }

        .custom-completed {
            background-color: #81c784;
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
        }

        .custom-checkin {
            background-color: #ffeb3b;
            color: #333;
            padding: 5px 15px;
            border-radius: 20px;
        }

        .custom-delivered {
            background-color: #4caf50;
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
        }

        .custom-canceled {
            background-color: #f44336;
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
        }

        .custom-btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            background-color: #a3d9d6;
            color: white;
            border: none;
            font-size: 1.2rem;
            cursor: pointer;
            padding: 0;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        .custom-pay-btn:hover {
            background-color: #7bc1bc;
        }

        .custom-cancel-btn {
            background-color: #f9a1a1;
        }

            .custom-cancel-btn:hover {
                background-color: #f28383;
            }

        .custom-more-btn {
            background-color: #90caf9;
        }

            .custom-more-btn:hover {
                background-color: #64b5f6;
            }

        .fa-fw {
            width: 1.25em;
        }

        .action-buttons {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
        }

        tbody tr:hover {
            background-color: #f0f0f0;
        }

        .custom-td:last-child {
            text-align: center;
        }

        .custom-repeat-btn {
            background-color: #ffecb3;
        }

            .custom-repeat-btn:hover {
                background-color: #ffdd75;
            }

        .custom-td.wrap {
            max-width: 200px; /* Set a maximum width for the column */
            white-space: normal; /* Allow the text to wrap */
            word-wrap: break-word; /* Break words if they are too long */
        }

    </style>
</head>
<body>
    <div class="custom-container">
        <div class="custom-sidebar">
            <h2>Information</h2>
            <ul>
                <li class="custom-active">
                    <a data-bs-toggle="collapse" href="#orderDropdown" role="button" aria-expanded="false" aria-controls="orderDropdown" style="display: flex; align-items: center; justify-content: space-between; width: 100%; position: relative;">
                        <span style="display: flex; align-items: center;">
                            Your Booking
                            <span class="custom-order-count" style="margin-left: 8px;">@Model.Count()</span>
                        </span>
                        <i class="fas fa-chevron-down" style="position: absolute; right: 10px;"></i> <!-- Dropdown icon -->
                    </a>
                </li>
                <div class="collapse" id="orderDropdown">
                <li>
                    <a href="/YourBooking/BookingHistory">Booking History</a> <!-- New Order History link -->
                </li>
        </div>
        <li>
            <a href="/Profile/CustomerProfile">Account</a>

        </li>
        </ul>
    </div>

    <div class="custom-content">
        <h2>Your Booking</h2>
        <table class="custom-table">
            <thead>
                <tr>
                    <th class="custom-th">No</th> <!-- Changed from Booking ID to No -->
                    <th class="custom-th">Booking Date</th>
                    <th class="custom-th">Trip Name</th>
                    <th class="custom-th">Status</th>
                    <th class="custom-th">Price</th>
                    <th class="custom-th">Action</th>
                </tr>
            </thead>
            <tbody>
                    @if (Model != null && Model.Any())
                    {
                        int index = 1; // Counter for numbering

                        foreach (var booking in Model)
                        {
                        <tr>
                            <td class="custom-td">@index</td>
                            <td class="custom-td">@booking.BookingDate</td>
                            <td class="custom-td wrap">

                                    @if (!string.IsNullOrEmpty(@booking.Trip?.TripName))
                                    {
                                        @booking.Trip.TripName
                                    }
                                    else
                                    {
                                        <text></text>
                                    }
                            </td>
                            <td class="custom-td">
                                    @if (booking.Status == "Requested" || booking.Status == "Processing" || booking.Status == "Rejected")
                                    {
                                    <span class="custom-requested">Requested</span>
                                    }
                                    else if (booking.Status == "Accepted")
                                    {
                                    <span class="custom-payment-available">Ready To Pay</span>
                                    }
                                    else if (booking.Status == "Confirmed")
                                    {
                                    <span class="custom-completed">Confirmed</span>
                                    }
                                    else if (booking.Status == "Checked in" || booking.Status == "Checked out")
                                    {
                                    <span class="custom-checkin">Check in</span>
                                    }
                                    else if (booking.Status == "Delivered")
                                    {
                                    <span class="custom-delivered">Delivered</span>
                                    }
                                    else if (booking.Status == "Canceled")
                                    {
                                    <span class="custom-canceled">Canceled</span>
                                    }
                                    else if (booking.Status == "Delivering")
                                    {
                                    <span class="custom-payment-available">Delivering</span>
                                    }
                            </td>
                            <td class="custom-td">
                                    @if (booking.QuotedAmount.HasValue && booking.QuotedAmount > 0)
                                    {
                                        // Tính toán giá trị đã cộng thêm 5%
                                        var adjustedAmount = booking.QuotedAmount.Value * (decimal)1.05; // Chuyển đổi 1.05 thành kiểu decimal

                                        var formattedAmount = adjustedAmount % 1 == 0
                                        ? string.Format("{0:0}", adjustedAmount)
                                        : string.Format("{0:0.00}", adjustedAmount);

                                        @($"{formattedAmount} USD")
                                    }
                                    else
                                    {
                                        <text></text> <!-- Hiển thị trống nếu không có QuotedAmount -->
                                    }
                            </td>
                            <td class="custom-td action-buttons">
                                <!-- Display Pay button only when status is "Accepted" -->
                                    @if (booking.Status == "Accepted" || booking.Status == "Confirmed" || booking.Status == "Checked in" || booking.Status == "Checked out" || booking.Status == "Delivering" || booking.Status == "Delivered")
                                    {
                                    <button class="custom-pay-btn custom-btn" title="Pay Now" onclick="window.location.href='/YourBooking/Payment?bookingId=@booking.BookingId';">
                                        <i class="fa-regular fa-credit-card fa-fw"></i>
                                    </button>
                                    }

                                <!-- Display More Info button only for specific statuses -->
                                    @if (booking.Status == "Confirmed" || booking.Status == "Checked in" || booking.Status == "Checked out" || booking.Status == "Delivering" || booking.Status == "Delivered")
                                    {
                                    <button class="custom-more-btn custom-btn" title="More Info" onclick="window.location.href='@Url.Action("TripDetail", "YourBooking", new { bookingId = booking.BookingId })'">
                                        <i class="fa-solid fa-info-circle fa-fw"></i>
                                    </button>
                                    }

                                <!-- Display Delete button only when status is not restricted -->
                                    @if (booking.Status != "Canceled" && booking.Status != "Confirmed" && booking.Status != "Checked in" && booking.Status != "Checked out" && booking.Status != "Delivering" && booking.Status != "Delivered")
                                    {
                                    <form method="post" action="/YourBooking/CancelBooking?bookingId=@booking.BookingId" style="display:inline;">
                                        <button type="submit" class="custom-cancel-btn custom-btn" title="Cancel Order" onclick="return confirm('Are you sure you want to cancel this booking?');">
                                            <i class="fas fa-trash-alt fa-fw"></i>
                                        </button>
                                    </form>
                                    }
                                <!-- Nút gửi lại báo giá -->
                                    @if (booking.Status == "Accepted")
                                    {
                                    <form method="post" action="/YourBooking/ResendQuote" style="display:inline;">
                                        <input type="hidden" name="bookingId" value="@booking.BookingId" />
                                        <button type="submit" class="custom-repeat-btn custom-btn" title="Resend Quote" onclick="return confirm('Would you like to resend the request for a quote?');">
                                            <i class="fa-solid fa-repeat fa-fw"></i>
                                        </button>
                                    </form>
                                    }
                            </td>
                        </tr>
                            index++; // Increment counter

                        }
                    }
                    else
                    {
                    <tr>
                        <td colspan="6" class="custom-td" style="text-align: center; vertical-align: middle;">No bookings found for your account.</td>
                    </tr>
                    }
            </tbody>

        </table>
    </div>
    </div>
    <script>
        function resendQuote(bookingId) {
            if (confirm("Would you like to resend the request for a quote?")) {
                // Gửi yêu cầu POST để cập nhật trạng thái
                fetch(`/YourBooking/ResendQuote?bookingId=${bookingId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                }).then(response => {
                    if (response.ok) {
                        alert("Quote request has been resent.");
                        location.reload(); // Tải lại trang để cập nhật trạng thái
                    } else {
                        alert("Error resending quote request.");
                    }
                }).catch(error => {
                    console.error('Error:', error);
                });
            }
            return false; // Ngăn chặn hành vi mặc định của nút
        }f
    </script>
</body>
</html>
